---
layout: post
title:  "The Making of Volafile - Part 2"
date:   2014-02-05 12:00
categories: volafile
---

In my [previous post](/2014/02/04/makingof/) I told the story of 
how the idea of Volafile came to life. This post depicts how, 
seven months later, I started working on what was someday to 
become Volafile.

####Someday, seven months ago

Staring blankly at my screen I wondered what to work on. I had just
finished an Android app and had no project to hack away on now. <br>

Improve that torrent search engine? Nah. <br>
Add features to my WLan Sniffer? Don't wanna. <br>
What about that idea I had ages ago? That realtime filesharing site? - Yeah, why
not?

*Node.js* was quickly chosen as the tool for the job, it was still new and
hip after all. And of course with *node.js*, there had to be *mongodb*... Yes. And
because we'll do a lot of IPC, even across multiple servers, we use *redis* solely as a publish / subscribe server. Doesn't mongodb come with a distributed filesystem, *GridFS*? Cool. Why don't we use that too then.

For serving static files and to do some routing of requests I added *nginx* to
the mix and ready to go was the first version of volafile.

Little did I know that most of these were poor choices for the job.

As (not) expected, it performed poorly. The first and pretty obvious problem was the
poor performance of GridFS. I was barely able to write more than 5mb/s into
it, reads weren't really fast either. After looking into hundreds of different
kinds of 'Cloud Filesystems', 'Distributed Object Storages' and the like,
I decided to roll my own solution. What I came up with was able to use the drive
throughput of my servers to the fullest, while scaling horizontally and being
written in a few hundred lines of node.js. Eventually I completely eliminated 
the dependency on mongodb (I just read about why it was supposed to be *bad* on HN anyways) and
moved the whole database into redis.

So Volafile was now running on a nginx, node.js, socket.io and redis stack,
most basic trickery working on the client side (albeit with a much simpler, and more ugly UI
than today) and I felt it was time to put this thing online. I registered the
domain [volafile.io](http://volafile.io), mentioned it in a few places around
the internet and waited for people to come. They came, and with them the
performance problems became obvious. They became even worse when Volafile ended
up being on the frontpage of Hacker News for about 12 hours. Thousands of
people were sent to the page and unable to use it because Volafile was barely 
able to handle the load.

It wasn't the servers. This shouldn't happen. 

*Something* was obviously *very wrong*.

To be continued in part 3.
